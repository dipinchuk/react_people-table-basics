{"version":3,"sources":["types/Page.ts","components/Navigation.tsx","App.tsx","pages/PageNotFound.tsx","pages/HomePage.tsx","components/PeopleLink.tsx","components/PeopleTable.tsx","api.ts","components/Loader/Loader.tsx","pages/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["Page","getLinkClass","isActive","classNames","getLinkStyle","color","Navigation","className","to","style","Home","People","App","role","PageNotFound","HomePage","PeopleLink","person","sex","slug","name","PeopleTable","people","personSlug","useParams","length","map","born","died","mother","motherName","father","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","findPersonMother","find","findPersonFather","PeoplePage","useState","setPeople","loading","setLoading","error","setError","useEffect","allPeople","undefined","catch","finally","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"sQAAYA,EAAZ,SAAYA,GAAZ,OAAYA,EAAZ,YAAYA,EAAZ,gBAAYA,CAAZ,M,OCKMC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAyCC,IAC5D,cAAe,CAAE,8BAA+BD,GAD7B,EAIfE,EAAe,SAAC,GAAD,MAEf,CAAEC,MAFa,EACjBH,SACsB,UAAY,GAFjB,EAIRI,EAAa,WACxB,OACE,mCACE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAWN,EACXQ,MAAOL,EAHT,SAKGJ,EAAKU,OAER,cAAC,IAAD,CACEF,GAAG,SACHD,UAAWN,EACXQ,MAAOL,EAHT,SAKGJ,EAAKW,iBAOnB,ECrCYC,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACRL,UAAU,iCACVM,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKN,UAAU,YAAf,SACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,UAKN,sBAAMA,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UAjBW,ECJNO,EAAe,kBAC1B,oBAAIP,UAAU,QAAd,2BAD0B,ECEfQ,EAAW,kBACtB,oBAAIR,UAAU,QAAd,sBADsB,E,eCOXS,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,cAAC,IAAD,CACEV,UAAWJ,IAAW,CACpB,kBAAkC,MAAfc,EAAOC,MAE5BV,GAAE,UAAKS,EAAOE,MAJhB,SAMGF,EAAOG,MAGb,ECVYC,EAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrCC,EAAeC,cAAfD,WAER,OACoB,IAAlBD,EAAOG,OACL,mBAAG,UAAQ,kBAAX,+CAKA,wBACE,UAAQ,cACRlB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGe,EAAOI,KAAI,SAAAT,GAAM,OAChB,qBACE,UAAQ,SACRV,UAAWJ,IAAW,CACpB,yBAA0Bc,EAAOE,OAASI,IAH9C,UAME,6BACE,cAAC,EAAD,CAAYN,OAAQA,MAGtB,6BAAKA,EAAOC,MACZ,6BAAKD,EAAOU,OACZ,6BAAKV,EAAOW,OACZ,6BAEIX,EAAOY,OAEH,cAAC,EAAD,CAAYZ,OAAQA,EAAOY,SAE3BZ,EAAOa,YAAc,MAG7B,6BACGb,EAAOc,OAEJ,cAAC,EAAD,CAAYd,OAAQA,EAAOc,SAE3Bd,EAAOe,YAAc,QA5Bb,QAqC3B,EChEM,SAASC,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKnC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECKhBoC,EAAmB,SAACrB,EAAkBF,GAC1C,OAAOE,EAAOsB,MAAK,SAAA3B,GAAM,OAAIA,EAAOG,OAASA,CAApB,GAC1B,EAEKyB,EAAmB,SAACvB,EAAkBF,GAC1C,OAAOE,EAAOsB,MAAK,SAAA3B,GAAM,OAAIA,EAAOG,OAASA,CAApB,GAC1B,EAEY0B,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOzB,EAAP,KAAe0B,EAAf,KACA,EAA8BD,oBAAkB,GAAhD,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAsBA,OApBAC,qBAAU,WACRpB,IAAYK,MAAK,SAAAgB,GAafN,GAZyB,WACvB,OAAOM,EAAU5B,KAAI,SAAAT,GAAM,kCACtBA,GADsB,IAEzBY,OAAQZ,EAAOa,WACXa,EAAiBW,EAAWrC,EAAOa,iBACnCyB,EACJxB,OAAQd,EAAOe,WACXa,EAAiBS,EAAWrC,EAAOe,iBACnCuB,GAPqB,GAS5B,GAGF,IACEC,OAAM,kBAAMJ,GAAS,EAAf,IACNK,SAAQ,kBAAMP,GAAW,EAAjB,GACZ,GAAE,IAGD,qCACE,oBAAI3C,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACG4C,GACC,mBAAG,UAAQ,qBAAqB5C,UAAU,kBAA1C,kCAKD0C,EACC,cAAC,EAAD,IAEA,cAAC,EAAD,CAAa3B,OAAQA,WAMhC,ECpDYoC,EAAiB,WAC5B,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,IAA9B,SACE,cAAC,IAAD,CAAOD,KAAK,sBAGhB,cAAC,IAAD,CAAOA,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUpD,GAAG,IAAIsD,SAAO,UAI5D,ECdDC,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,EAAD,I","file":"static/js/main.8aa14686.chunk.js","sourcesContent":["export enum Page {\n  Home = 'Home',\n  People = 'People',\n}\n","// import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Page } from '../types/Page';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nconst getLinkStyle = (\n  { isActive }: { isActive: boolean },\n) => ({ color: isActive ? '#485fc7' : '' });\n\nexport const Navigation = () => {\n  return (\n    <>\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={getLinkClass}\n              style={getLinkStyle}\n            >\n              {Page.Home}\n            </NavLink>\n            <NavLink\n              to=\"people\"\n              className={getLinkClass}\n              style={getLinkStyle}\n            >\n              {Page.People}\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Navigation />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n\n);\n","// import React from 'react';\n\nexport const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PeopleLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n      to={`${person.slug}`}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PeopleLink } from './PeopleLink';\n\ninterface Props {\n  people: Person[],\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  return (\n    people.length === 0 ? (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    ) : (\n\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(person => (\n            <tr\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': person.slug === personSlug,\n              })}\n            >\n              <td>\n                <PeopleLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {\n                  person.mother\n                    ? (\n                      <PeopleLink person={person.mother} />\n                    )\n                    : person.motherName || '-'\n                }\n              </td>\n              <td>\n                {person.father\n                  ? (\n                    <PeopleLink person={person.father} />\n                  )\n                  : person.fatherName || '-'}\n              </td>\n\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    )\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { PeopleTable } from '../components/PeopleTable';\n// import { Link, useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { Loader } from '../components/Loader';\n\nconst findPersonMother = (people: Person[], name: string) => {\n  return people.find(person => person.name === name);\n};\n\nconst findPersonFather = (people: Person[], name: string) => {\n  return people.find(person => person.name === name);\n};\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    getPeople().then(allPeople => {\n      const peopleWithFamily = (): Person[] => {\n        return allPeople.map(person => ({\n          ...person,\n          mother: person.motherName\n            ? findPersonMother(allPeople, person.motherName)\n            : undefined,\n          father: person.fatherName\n            ? findPersonFather(allPeople, person.fatherName)\n            : undefined,\n        }));\n      };\n\n      setPeople(peopleWithFamily);\n    })\n      .catch(() => setError(true))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {loading ? (\n            <Loader />\n          ) : (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  HashRouter as Router, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { PageNotFound } from './pages/PageNotFound';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Root: React.FC = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":personSlug?\" />\n          </Route>\n        </Route>\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n    </Router>\n  );\n};\n","// import React from 'react';\nimport { createRoot } from 'react-dom/client';\n// import { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\n// import { App } from './App';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}